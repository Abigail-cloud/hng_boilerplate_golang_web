basePath: /api/v1
definitions:
  models.CreateProductRequestModel:
    properties:
      category:
        type: string
      description:
        type: string
      name:
        type: string
      price:
        type: number
    required:
    - category
    - description
    - name
    - price
    type: object
  models.CreateUserRequestModel:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      username:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  models.UpdateProductRequestModel:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
      product_id:
        type: string
    required:
    - description
    - name
    - price
    - product_id
    type: object
host: http://localhost:8019
info:
  contact: {}
  description: This is a boilerplate for golang HNG Internship 11.0
  title: HNG Boilerplate Golang Web API
  version: "1.0"
paths:
  /product:
    post:
      consumes:
      - application/json
      description: Create a new product
      parameters:
      - description: Product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.CreateProductRequestModel'
      produces:
      - application/json
      responses: {}
      summary: Create Product
      tags:
      - Product
  /product/{product_id}:
    delete:
      consumes:
      - application/json
      description: Delete a product
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete DeleteProductController
      tags:
      - DeleteProductController
    get:
      consumes:
      - application/json
      description: Get a Product
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: GetProduct
      tags:
      - GetProduct
    put:
      consumes:
      - application/json
      description: Update a product
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      - description: Product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProductRequestModel'
      produces:
      - application/json
      responses: {}
      summary: UpdateProduct
      tags:
      - UpdateProduct
  /product/category/{category}:
    get:
      consumes:
      - application/json
      description: Get all products in a category
      parameters:
      - description: Category
        in: path
        name: category
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: GetProductsInCategory
      tags:
      - GetProductsInCategory
  /product/filter:
    get:
      consumes:
      - application/json
      description: Get products based on price and category
      parameters:
      - description: Price
        in: query
        name: price
        required: true
        type: number
      - description: Category
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses: {}
      summary: FilterProducts
      tags:
      - FilterProducts
schemes:
- http
swagger: "2.0"
